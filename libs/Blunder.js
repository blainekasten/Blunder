// Generated by CoffeeScript 1.6.2
(function() {
  String.prototype.splice = function(index, rem, string) {
    return this.slice(0, index) + string + this.slice(index + Math.abs(rem));
  };

  window.Blunder = (function() {
    function Blunder() {}

    Blunder.prototype.reverseParse = function(text) {
      text = this._replaceExpr(/(<b>|<\/b>)/, text, "^");
      text = this._replaceExpr(/(<i>|<\/i>)/, text, "~");
      text = this._replaceExpr(/(<u>|<\/u>)/, text, "_");
      return text = this._replaceExpr(/<br\/>/, text, "\n");
    };

    Blunder.prototype.parseText = function(text) {
      text = this._parseExpr(/\^/, text, "<b>");
      text = this._parseExpr(/\~/, text, "<i>");
      text = this._parseExpr(/\_/, text, "<u>");
      return text = this._parseExpr(/\n/, text, "<br/>", false);
    };

    Blunder.prototype._parseExpr = function(expr, text, tag, boolClose) {
      var clTag;

      if (boolClose == null) {
        boolClose = true;
      }
      clTag = tag.splice(1, 0, "/");
      if (expr.test(text)) {
        text = text.replace(expr, tag);
        if (boolClose !== false) {
          text = text.replace(expr, clTag);
        }
        return this._parseExpr(expr, text, tag, boolClose);
      } else {
        return text;
      }
    };

    Blunder.prototype._replaceExpr = function(expr, text, mark) {
      if (expr.test(text)) {
        text = text.replace(expr, mark);
        return this._replaceExpr(expr, text, mark);
      } else {
        return text;
      }
    };

    return Blunder;

  })();

}).call(this);
