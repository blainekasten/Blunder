// Generated by CoffeeScript 1.6.2
(function() {
  window.Blunder = (function() {
    function Blunder() {}

    Blunder.prototype.reverseParse = function(text) {
      text = this._replaceBolds(text);
      text = this._replaceItalics(text);
      text = this._replaceUnderlines(text);
      return text = this._replaceReturns(text);
    };

    Blunder.prototype.parseText = function(text) {
      text = this._findBolds(text);
      text = this._findItalics(text);
      text = this._findUnderlines(text);
      return text = this._findReturns(text);
    };

    Blunder.prototype._findBolds = function(text) {
      var expr;

      expr = /\^/;
      if (expr.test(text)) {
        text = text.replace(expr, "<b>");
        text = text.replace(expr, "</b>");
        return this._findBolds(text);
      } else {
        return text;
      }
    };

    Blunder.prototype._findItalics = function(text) {
      var expr;

      expr = /\~/;
      if (expr.test(text)) {
        text = text.replace(expr, "<i>");
        text = text.replace(expr, "</i>");
        return this._findItalics(text);
      } else {
        return text;
      }
    };

    Blunder.prototype._findUnderlines = function(text) {
      var expr;

      expr = /\_/;
      if (expr.test(text)) {
        text = text.replace(expr, "<u>");
        text = text.replace(expr, "</u>");
        return this._findUnderlines(text);
      } else {
        return text;
      }
    };

    Blunder.prototype._findReturns = function(text) {
      var expr;

      expr = /\n/;
      if (expr.test(text)) {
        text = text.replace(expr, "<br/>");
        return this._findReturns(text);
      } else {
        return text;
      }
    };

    Blunder.prototype._replaceBolds = function(text) {
      var expr;

      expr = /(<b>|<\/b>)/;
      if (expr.test(text)) {
        text = text.replace(expr, "^");
        return this._replaceBolds(text);
      } else {
        return text;
      }
    };

    Blunder.prototype._replaceItalics = function(text) {
      var expr;

      expr = /(<i>|<\/i>)/;
      if (expr.test(text)) {
        text = text.replace(expr, "~");
        return this._replaceItalics(text);
      } else {
        return text;
      }
    };

    Blunder.prototype._replaceUnderlines = function(text) {
      var expr;

      expr = /(<u>|<\/u>)/;
      if (expr.test(text)) {
        text = text.replace(expr, "_");
        return this._replaceUnderlines(text);
      } else {
        return text;
      }
    };

    Blunder.prototype._replaceReturns = function(text) {
      var expr;

      expr = /<br\/>/;
      if (expr.test(text)) {
        text = text.replace(expr, "\n");
        return this._replaceReturns(text);
      } else {
        return text;
      }
    };

    return Blunder;

  })();

}).call(this);
